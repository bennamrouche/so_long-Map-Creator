package map.creator;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author alphaben 
 */
public class MapCanva extends javax.swing.JPanel {

     
 
 private final Data data = new Data();


 private String[] map;
    public MapCanva() {
        
        initComponents();
       setBackground(Color.black);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void paint(Graphics g)
    {
      
        super.paint(g); 

        if (map == null) return;
         for(int j = 0; j < map.length; j ++)
         {
             for(int i = 0 ; i < map[0].length(); i++)
            {
                int     x = i * 32;
                 int    y  = j * 32;
                 
                DrawImage(g, x , y , map[j].toCharArray()[i]);
                
      
            }
        }
        
    }

    private void DrawImage(Graphics g, int x, int y, char C )
{
    g.drawImage(data.Floor, x, y, this);
    switch(C)
    {
        case 'P' -> g.drawImage(data.Player, x, y, this);
        case 'C' -> g.drawImage(data.Target, x, y, this);
        case 'E' -> g.drawImage(data.Exit, x, y, this);
        case '1' -> g.drawImage(data.Wall, x, y, this);
        case 'X' -> g.drawImage(data.Enemy, x, y, this);
        case '0' -> g.drawImage(data.Floor, x, y, this);
    
    }
 
}
    
 public void setMap(String[] map)
{
    this.map = map;
     repaint();
     validate();

}

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
